/* position Betty in the parent compontent of each instance */

/* // use --bettySize: 100%; in global styles */

.charCircleBetty {
  position: relative;
  width: var(--bettySize);
  height: var(--bettySize);
}

.charCircleBetty::before,
.charCircleBetty::after {
  position: absolute;
  width: var(--bettySize);
  height: calc(var(--bettySize) / 2);
  background-color: #c5f8ff;
  /* // TODO can we use CSS custom props in here? */
}

.charCircleBetty::before {
  transform-origin: 50% 100%;
  content: '';
  border-radius: var(--bettySize) var(--bettySize) 0 0;
  top: 0;
  transform: rotate(-65deg);
}

.charCircleBetty::after {
  transform-origin: 50% 0;
  bottom: 0;
  content: '';
  border-radius: 0 0 var(--bettySize) var(--bettySize);
}

.eye {
  width: 1.5rem;
  height: 1.5rem;
  background-color: var(--black);
  position: absolute;
  top: 28%;
  left: 38%;
  z-index: 2;
  border-radius: 50%;
  transform: scaleY(1), rotate(-20deg);

  animation: blink 5s ease-out 2s infinite;
}

.eye__small {
  width: 0.7rem;
  height: 0.7rem;
}

.eyeClosed {
  opacity: 0;

  position: absolute;
  top: 28%;
  left: 36%;
  z-index: 2;
  transform: rotate(-20deg);
}
.eyeClosed svg {
  width: 30px;
}

@media screen and (min-width: 30rem) {
  .eye {
    width: 1.8rem;
    height: 2rem;
    top: 25%;
    left: 35%;
  }
  .eye__small {
    width: 1rem;
    height: 1rem;
  }
}
@media screen and (min-width: 50rem) {
  .eye {
    width: 3rem;
    height: 3.3rem;
    top: 35%;
    left: 38%;
  }
  .eyeClosed {
    top: 38%;
    left: 36%;
  }

  .eyeClosed svg {
    width: 60px;
  }

  .eye__small {
    width: 1.2rem;
    height: 1.2rem;
  }
}
@media screen and (min-width: 80rem) {
  .eye {
    width: 4rem;
    height: 4.5rem;
    top: 35%;
    left: 38%;
  }
  .eyeClosed {
    top: 36%;
    left: 36%;
  }
  .eyeClosed svg {
    width: 80px;
  }
  .eye__small {
    width: 1.2rem;
    height: 1.2rem;
  }
}

@keyframes blink {
  0% {
    transform: scaleY(0.3);
  }
  5%,
  100% {
    transform: scaleY(1);
  }
}

.charCircleBettyAnimationWrapper {
  transform-origin: 50%;
}

.charCircleBettyAnimationWrapper.lookDown {
  animation: lookDown 0.7s cubic-bezier(0.53, -0.32, 0.54, 1.25) forwards;
}

.charCircleBettyAnimationWrapper.chomp .eye {
  opacity: 0;
}
.charCircleBettyAnimationWrapper.chomp .eyeClosed {
  opacity: 1;
}
.charCircleBettyAnimationWrapper.chomp .charCircleBetty::before {
  animation: chompTop 0.7s cubic-bezier(0.53, -0.32, 0.54, 1.66) forwards;
}
.charCircleBettyAnimationWrapper.chomp .charCircleBetty::after {
  animation: chompBottom 0.7s cubic-bezier(0.53, -0.32, 0.54, 1.25) forwards;
}

@keyframes lookDown {
  from {
    transform: rotate(0);
  }
  to {
    transform: rotate(45deg);
  }
}

@keyframes chompTop {
  0% {
    transform: rotate(-65deg);
  }
  50% {
    transform: rotate(-32deg);
  }
  75% {
    transform: rotate(-45deg);
  }
  100% {
    transform: rotate(-32deg);
  }
}
@keyframes chompBottom {
  0% {
    transform: rotate(0);
  }
  50% {
    transform: rotate(-25deg);
  }
  75% {
    transform: rotate(-15deg);
  }
  100% {
    transform: rotate(-25deg);
  }
}
